#!/usr/bin/env python3
import h5py
import numpy as np
import tabulator
import sys

from ssat.ssatlib import pedo


class DataSheet:
    def __init__(self, name):
        self.name = name

    def properties(self):
        p = []
        with tabulator.Stream(self.name, sheet=2, headers=3) as stream:
            self.headers = stream.headers[5:19]
            for row in stream:
                if row[0] is None:
                    break
                n = row[0]
                for c in ':/ ':
                    n = n.replace(c, '_')
                p.append((n, row[5:19], np.array(row[19:32])))
        return p

    def xyz(self):
        p = []
        with tabulator.Stream(self.name, sheet=1, headers=1) as stream:
            for row in stream:
                if row[0] is None:
                    break
                p.append((row[0], row[1], row[2]))
        return np.array(p)


def filename():
    s = sys.argv[1]
    if s.endswith('.ods'):
        s = s[:-4]
    return s + '.dat'


def main():
    dat = DataSheet(sys.argv[1])
    f = h5py.File(filename(), 'w')
    f.create_dataset('PROFILE', data=dat.xyz())
    for name, prop, grain in dat.properties():
        g = f.create_group('LAYER/' + name.upper())
        for k, v in zip(dat.headers, prop):
            if v:
                g.attrs[k] = v

        dset = g.create_dataset(
            'GRANULOMETRY',
            data=np.column_stack((pedo.diaspace(), grain)))
    f.close()
    return 0


if __name__ == '__main__':
    sys.exit(main())
