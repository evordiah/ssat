#!/usr/bin/python3 -W ignore
import matplotlib.pyplot as plt
import numpy as np
import sys

from ssat import *
from ssat.ssatlib import flag
from ssat.ssatlib import hydro
from ssat.ssatlib.stats import loglap

n = 0.
rho = 0.
usage = "usage: gsa [-density float] [-porosity float] [-t float] file"


def nimmo(h, alpha=1.38, cc=130.):
    h = np.asarray(h)
    scalar_input = False
    if h.ndim == 0:
        h = h[None]
        scalar_input = True

    r = np.zeros(h.size)
    e = n / (1. - n)
    xi = (2. * e) / (3. * cc**2) * (
        (loglap.a * loglap.b) / (loglap.a + loglap.b) *
        (1. / (2. * np.pi * rho)))**(1. - alpha)
    mask = h < 1. / (np.sqrt(xi) * loglap.d**alpha)
    r[mask] = (loglap.d**(loglap.b * (alpha - 1.)) * xi * h[mask]**2)**(
        1. / (loglap.b * (alpha - 1.) - 2. * alpha))
    mask ^= True
    r[mask] = (loglap.d**(loglap.a * (1. - alpha)) * xi * h[mask]**2)**(
        1. / (loglap.a - (2. + loglap.a) * alpha))
    t = n * loglap.cdf(r)

    if scalar_input:
        return np.squeeze(t)
    return t


if __name__ == '__main__':
    flag.flags = {'density': 2650.0, 'porosity': 0.0}
    if flag.parse() or len(sys.argv) < 1:
        die(usage)

    arr = np.loadtxt(sys.argv[0])
    dp = arr[::-1, 0]
    wp = arr[::-1, 1] / 100.
    wp[1:] -= wp[:-1].copy()
    d, w = diaspace(dp, wp)

    rrmse, rmse = loglap.fit(d, np.cumsum(w))
    log('Fit rrms/rms: {:.2f}/{:.2f}'.format(rrmse, rmse))

    if flag.flags['porosity'] == 0:
        U = loglap.ppf(.6) / loglap.ppf(.1)
        n = .255 * (1. + .83**U)
        log('Calculated porosity: {:.2f}'.format(n))
    else:
        n = flag.flags['porosity']
    rho = flag.flags['density']

    tr = float(nimmo(1e6))
    xp = np.logspace(0, 6)
    fp = (nimmo(xp) - tr) / (n - tr)
    rc = hydro.Retention()
    rc.fit(xp, fp)
    log('Saturated/residual water content: {:.2f}/{:.2f}'.format(n, tr))
    log('Parameter: a = {:.4f}, n = {:.4f}'.format(rc.a, rc.n))

    sys.exit(0)
